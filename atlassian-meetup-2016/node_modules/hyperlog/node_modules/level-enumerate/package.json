{
  "name": "level-enumerate",
  "version": "1.0.1",
  "description": "Enumerate keys to incrementing numbers",
  "main": "index.js",
  "dependencies": {
    "mutexify": "^1.0.1"
  },
  "devDependencies": {
    "memdb": "^0.2.0",
    "standard": "^2.4.4",
    "tape": "^3.5.0"
  },
  "scripts": {
    "test": "standard && tape test.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mafintosh/level-enumerate.git"
  },
  "author": {
    "name": "Mathias Buus",
    "url": "@mafintosh"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mafintosh/level-enumerate/issues"
  },
  "homepage": "https://github.com/mafintosh/level-enumerate",
  "readme": "# level-enumerate\n\nEnumerate keys to incrementing numbers.\nIf you enumerate the same key twice it will enumerate to the same value.\n\n```\nnpm install level-enumerate\n```\n\n[![build status](http://img.shields.io/travis/mafintosh/level-enumerate.svg?style=flat)](http://travis-ci.org/mafintosh/level-enumerate)\n\n## Usage\n\n``` js\nvar enumerator = require('level-enumerate')\nvar enumerate = enumerator(db) // where db is a levelup\n\nenumerate('hello', function (err, value) {\n  console.log(value) // prints 0\n  enumerate('hello', function (err, value) {\n    console.log(value) // prints 0 again\n    enumerate('world', function (err, value) {\n      console.log(value) // prints 1\n    })\n  })\n})\n```\n\n## API\n\n#### `enumerate = enumerator(db, [options])`\n\nCreate a new enumerator. Options include\n\n``` js\n{\n  sep: '!'    // the separator used when storing the key values\n  prefix: ... // optional string prefix to use when keys when stored\n}\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "level-enumerate@1.0.1",
  "_shasum": "d8fdaff2ef76bd6ed4e49d729dd5d0f1216801bf",
  "_resolved": "https://registry.npmjs.org/level-enumerate/-/level-enumerate-1.0.1.tgz",
  "_from": "level-enumerate@>=1.0.1 <2.0.0"
}
