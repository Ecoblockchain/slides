{
  "name": "framed-hash",
  "version": "1.1.0",
  "description": "A hash function that wraps all input chunks with a length prefix.",
  "main": "index.js",
  "dependencies": {},
  "devDependencies": {
    "tape": "^4.0.0"
  },
  "scripts": {
    "test": "tape test.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mafintosh/framed-hash.git"
  },
  "author": {
    "name": "Mathias Buus",
    "url": "@mafintosh"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mafintosh/framed-hash/issues"
  },
  "homepage": "https://github.com/mafintosh/framed-hash",
  "readme": "# framed-hash\n\nA hash function that wraps all input chunks with a length prefix.\n\n```\nnpm install framed-hash\n```\n\n[![build status](http://img.shields.io/travis/mafintosh/framed-hash.svg?style=flat)](http://travis-ci.org/mafintosh/framed-hash)\n\n## Usage\n\n``` js\nvar framedHash = require('framed-hash')\n\nvar hash = framedHash('sha256')\n\nhash.update('hello')\nhash.update('world')\n\n// prints 9054cf26016be468a8b56b40342bd5b479202a40da9fc9056b1ac4c5070343d8\nconsole.log(hash.digest('hex'))\n\nvar anotherHash = framedHash('sha256')\n\nanotherHash.update('hell')\nanotherHash.update('oworld')\n\n// prints 9cb231ff970f99993c9753364405184fc9024c3f56d98716d90f4913a6c746c0\n// since the input chunks were different\nconsole.log(anotherHash.digest('hex'))\n```\n\n## API\n\n#### `hash = framedHash(algorithm)`\n\nCreate a new hash instance. Algorithm can be anything accepted by `crypto.createHash(algo)`\n\n#### `hash.update(chunk)`\n\nUpdate the hash. Internally the chunk is prefixed with the length of the chunk and a newline\n\n#### `hash.digest(encoding)`\n\nReturns the digest of the hash.\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "framed-hash@1.1.0",
  "_shasum": "d0c2e2afaf37953837dd612df07d14c4fab71d79",
  "_resolved": "https://registry.npmjs.org/framed-hash/-/framed-hash-1.1.0.tgz",
  "_from": "framed-hash@>=1.1.0 <2.0.0"
}
