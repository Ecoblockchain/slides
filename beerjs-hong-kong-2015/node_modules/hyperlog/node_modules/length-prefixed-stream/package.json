{
  "name": "length-prefixed-stream",
  "version": "1.3.0",
  "description": "Streaming length prefixed buffers",
  "main": "index.js",
  "dependencies": {
    "readable-stream": "^2.0.0",
    "varint": "^4.0.0"
  },
  "devDependencies": {
    "concat-stream": "^1.4.6",
    "tape": "^2.14.0",
    "through2": "^0.6.1"
  },
  "scripts": {
    "test": "tape test.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mafintosh/length-prefixed-stream.git"
  },
  "keywords": [
    "varint",
    "length",
    "prefixed",
    "stream",
    "streaming"
  ],
  "author": {
    "name": "Mathias Buus"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mafintosh/length-prefixed-stream/issues"
  },
  "homepage": "https://github.com/mafintosh/length-prefixed-stream",
  "readme": "# length-prefixed-stream\n\nStreaming equivalent of [length-prefixed-message](https://github.com/sorribas/length-prefixed-message).\nThis module allow you to send buffers with a varint length prefix to ensure that they will arrive unpartioned\n\n```\nnpm install length-prefixed-stream\n```\n\n[![build status](http://img.shields.io/travis/mafintosh/length-prefixed-stream.svg?style=flat)](http://travis-ci.org/mafintosh/length-prefixed-stream)\n\n## Usage\n\n``` js\nvar lpstream = require('length-prefixed-stream')\n\nvar encode = lpstream.encode() // create an encode stream to send data\nvar decode = lpstream.decode() // create an decode stream to receive data\n\nencode.write('hello world') // send \"hello world\"\n\ndecode.on('data', function(data) {\n  console.log(data.toString()) // will always print \"hello world\"\n})\n\nencode.pipe(decode) // for testing just pipe to our selves\n```\n\n## License\n\nMIT",
  "readmeFilename": "README.md",
  "gitHead": "309635961eaa5c85bf8443a86364d395b0a3d957",
  "_id": "length-prefixed-stream@1.3.0",
  "_shasum": "ca82d60050900d0851052cc3cdfe3360f2df11c8",
  "_from": "length-prefixed-stream@>=1.1.0 <2.0.0"
}
